# Prometheus configuration for Mental Health Crisis Detection System

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'crisis-detector'
    environment: 'production'

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # =============================================================================
  # APPLICATION METRICS
  # =============================================================================
  - job_name: 'crisis-detector-api'
    static_configs:
      - targets: ['app:8000']
    metrics_path: '/metrics'
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true
    params:
      format: ['prometheus']

  # =============================================================================
  # SYSTEM METRICS
  # =============================================================================
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # =============================================================================
  # DATABASE METRICS
  # =============================================================================
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # =============================================================================
  # CONTAINER METRICS
  # =============================================================================
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s

  # =============================================================================
  # NGINX METRICS
  # =============================================================================
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s

  # =============================================================================
  # BLACKBOX MONITORING
  # =============================================================================
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://app:8000/health
        - http://app:8000/health/detailed
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # =============================================================================
  # CUSTOM METRICS
  # =============================================================================
  - job_name: 'crisis-detector-custom'
    static_configs:
      - targets: ['app:8000']
    metrics_path: '/metrics/custom'
    scrape_interval: 30s
    honor_labels: true

  # =============================================================================
  # SERVICE DISCOVERY (if using Kubernetes)
  # =============================================================================
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
            - crisis-detector
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # =============================================================================
  # REMOTE WRITE (if using external storage)
  # =============================================================================
  # remote_write:
  #   - url: "https://prometheus-remote-write-endpoint"
  #     basic_auth:
  #       username: "your-username"
  #       password: "your-password"
  #     write_relabel_configs:
  #       - source_labels: [__name__]
  #         regex: 'crisis_.*'
  #         action: keep

  # =============================================================================
  # STORAGE CONFIGURATION
  # =============================================================================
  # storage:
  #   tsdb:
  #     retention.time: 30d
  #     retention.size: 10GB
  #     wal-compression: true

  # =============================================================================
  # RECORDING RULES
  # =============================================================================
  # recording_rules:
  #   - name: "crisis_detection_rules"
  #     rules:
  #       - record: "crisis_detection:rate"
  #         expr: "rate(crisis_detections_total[5m])"
  #       - record: "crisis_detection:accuracy"
  #         expr: "crisis_detection_accuracy"
  #       - record: "crisis_detection:latency_p99"
  #         expr: "histogram_quantile(0.99, rate(analysis_duration_seconds_bucket[5m]))"
